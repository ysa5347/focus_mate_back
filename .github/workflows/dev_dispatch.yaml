name: Continuous Integration when accure dispatch at dev branch

on: workflow_dispatch

env:
  AWS_REGION: ap-northeast-2                   # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: with_ance               # set this to your Amazon ECR repository name
  CONTAINER_NAME: with_ance_backend           # set this to the name of the container in the
  REF: ${{ github.ref }}

permissions:
  contents: read

jobs:
  CI:
    name: CI
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with: 
        ref: ${{ env.REF }}
        ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}
        persist-credentials: true   

    - name: Set sha outputs
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Check sha outputs
      run: echo ${{ steps.vars.outputs.sha_short }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.BUILDER_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.BUILDER_AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Create .env file
      env:
        SECRETS_CONTEXT: ${{ toJson(secrets) }}
      run: |
        jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' <<< "$SECRETS_CONTEXT" > .env
        cat .env

    - name: Build, tag, and push image to Amazon ECR
      id: build-push
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        sha: ${{ steps.vars.outputs.sha_short }}
        branch: ${{ github.ref_name }}
        
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to EKS or local k8s.
        echo ${{ env.branch }}
        echo ${{ env.sha }}
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:dev-${{ env.sha }} --build-arg BRANCH=${{ env.branch }} .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:dev-${{ env.sha }}
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:dev-${{ env.sha }}"

    - uses: mikefarah/yq@master
    - name: create PR on with_ance_config
      id: create-config
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        SHA: ${{ steps.vars.outputs.sha_short }}
        REPOURL: "https://github.com/ysa5347/with_ance_config.git"
        TAG: ${{ env.ECR_REGISTRY }}/$ECR_REPOSITORY:dev-${{ env.SHA }}
        branch: ${{ github.ref_name }}
      run: |
        git clone ${{ env.REPOURL }}
        git config --global user.email "ysa5347@gmail.com"
        git config --global user.name "ysa5347"        
        cd with_ance_config
        git checkout main
        # if[yq '.images.tags[]|contains(.name==strenv(branch))' ./with_ance/values.yaml ]; then
        # yq -i '.images.tags +={"name":strenv(branch),"tag":strenv(TAG)}' ./with_ance/values.yaml
        # fi
        yq -i '(.images.tags[]|select(.name==strenv(branch))|.tag)=strenv(TAG)' ./with_ance/values.yaml
        git add .
        git commit -m "TAG; tag $branch"
        git push origin main
  